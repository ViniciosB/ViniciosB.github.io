Print(df[df$mes=="Maio",])
print(df[df$mes=="Janeiro", ])
print(df[df$mes=="Novembro", ])
Print(df[df$mes=="Maio",]\n df[df$mes=="Janeiro", ])
Print(df[df$mes=="Maio",],"\n", df[df$mes=="Janeiro", ],"\n",df[df$mes=="Novembro", ])
print(df[df$mes=="Maio",],"\n", df[df$mes=="Janeiro", ],"\n",df[df$mes=="Novembro", ])
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
df<-data.frame(mes,Temperatura);df
x<-df[df$mes=="Maio",])
x<-df[df$mes=="Maio",]
Y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-paste(x,t,z)
dr<-rbind(x,t,z)
dr<-rbind(x,t)
dr<-rbind(x,z)
dr<-rbind(x,y,z)
dr
x<-df[df$mes=="Maio",]
Y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-rbind(x,y,z)
dr
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
df<-data.frame(mes,Temperatura);df
x<-df[df$mes=="Maio",]
y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-rbind(x,y,z)
dr
1+1; 1-3; 4*5;
Vazio <- NULL; Vazio
Ausente <- NA; Ausente
Constante <- 1; Constante
vetor1 <- c(4,3,5,1) #Dando um nome aos dados: vetor1
vetor2 <- c("Boa","Noite","!") #Dando um nome aos dados: vetor2
vetor1; vetor2 #Mostrando os dados
mode(vetor1); mode(vetor2)
mat1 <- matrix(c(1,2,3,4),2,2)
mat1
mat2 <- matrix(c(1,2,3,4),1,4)
mat2
id <- diag(3) #3 ´e a dimens~ao da matriz identidade
id
diagonal <- diag(5,3) #3 ´e a dimens~ao da matriz, 5 sua composi¸c~ao
diagonal
mat1
mat1+mat1; mat1-mat1
mat1*mat1
mat1%*%mat1
t(mat1)
solve(mat1)
nome <- c("Ricardo", "Haroldo", "Gabi", "Cosme", "Isabela", "La´ıs")
idade <- c(14, 7 , 41, 18, 32, 27)
Planilha <- data.frame(nome,idade); Planilha
rownames(Planilha) <- c("nome1","nome2","nome3","nome4","nome5","nome6")
colnames(Planilha) <- c("Nome","Idade")
Planilha
Lista <- list(mat1,Planilha); Lista
Planilha$Idade
Planilha[4,]
Planilha[Planilha$Nome=="Cosme",]
subset(Planilha, Nome=="Cosme")
subset(Planilha, Idade>18)
Planilha[c("nome3","nome2"),"Nome"]
print(mes.len)
print(mes.lenght)
for(i in 1:length(mes)){
print(i)
}
df[df$mes[2]]
df$mes[2]
df$mes[2,]
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df
df$mes[2,]
df[2,]
df$mes[2]
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df
df$mes[2]
x<-df[df$mes=="Maio",]
y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-rbind(x,y,z)
dr
length(vetor2)
for(i in 1:length(mes)){
for(i in 1:length(busca)){
if(df$mes[i]==busca[j]){
print("a")
}
}
}
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
print("a")
}
}
}
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
x<-df[i]
dr<-rbind(dr,x)
}
}
}
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
x<-df[i]
dr<- merge.data.frame(dr,df[i])
}
}
}
dr<- merge.data.frame(dr,x)
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
x<-df[i]
dr<- merge(dr,x,all=T)
}
}
}
x<-df[i]
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df
df$mes[2]
x<-df[df$mes=="Maio",]
y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-rbind(x,y,z)
dr
length(vetor2)
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
x<-df[i]
dr<- merge(dr,x,all=T)
}
}
}
length(M)
M
M<-c()
Temp<-c()
length(M)
M<-c()
Temp<-c()
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dr<-data.frame(M,Temp);dr
dr<-data.frame(M,Temp)
dr<-rename(dr,Mes=M)
dr<-data.frame(M,Temp)
rename(dr,c("M"="Mes","Temp"="Temperatura")
M<-c()
Temp<-c()
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dr<-data.frame(M,Temp)
rename(dr,c("M"="Mes","Temp"="Temperatura")
dr<-data.frame(M,Temp)
dr<-rename(dr,c("M"="Mes","Temp"="Temperatura")
rename(dr, c("M"="Mes","Temp"="Temperatura"))
M<-c()
Temp<-c()
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dr<-data.frame(M,Temp)
rename(dr, c("M"="Mes","Temp"="Temperatura"))
dr
install.packages("dplyr")
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df
df$mes[2]
x<-df[df$mes=="Maio",]
y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-rbind(x,y,z)
dr
M<-c()
Temp<-c()
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dr<-data.frame(M,Temp)
rename(dr, c("M"="Mes","Temp"="Temperatura"))
dr
rename(dr, c("M"="Mes","Temp"="Temperatura"))
install.packages("dplyr")
dr
M<-c()
Temp<-c()
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dr<-data.frame(M,Temp)
rename(dr, c("M"="Mes","Temp"="Temperatura"))
dr
names(dr)[names(df)=='M']<-'Mes'
dr
library(plyr)
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df
df$mes[2]
x<-df[df$mes=="Maio",]
y<-df[df$mes=="Janeiro", ]
z<-df[df$mes=="Novembro", ]
dr<-rbind(x,y,z)
dr
M<-c()
Temp<-c()
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dr<-data.frame(Mes=M,Temperatura=Temp)
dr
#1 forma
#dados e busca
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
source("~/ex.R")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
plot(dfr$Mes,dfr$Temperatura)
plot(dfr$Mes,dfr$Temperatura)
plot(dfr$Mes,dfr$Temperatura)
plot(dfr$Mes,dfr$Temperatura)
plot(df$mes,df$Temperatura)
plot(df)
x<-df[df$mes=="Maio",]              #busca
y<-df[df$mes=="Janeiro", ]          #busca
z<-df[df$mes=="Novembro", ]         #busca
dfr<-rbind(x,y,z)                   #merge dados encontrados
dfr                                 #print dataframe resultante
################################################################################
#2 forma
M<-c()    #vetor mes vazio
Temp<-c() #vetor Temperatura vazio
#Loop de busca
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){
M[length(M)+1]=df$mes[i]
Temp[length(Temp)+1]=df$Temperatura[i]
}
}
}
dfr<-data.frame(Mes=M,Temperatura=Temp);dfr
plot(dfr$Mes,dfr$Temperatura)
#1 forma
#dados e busca
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df  #merge dataframe
x<-df[df$mes=="Maio",]              #busca
y<-df[df$mes=="Janeiro", ]          #busca
z<-df[df$mes=="Novembro", ]         #busca
dfr<-rbind(x,y,z)                   #merge dados encontrados
dfr                                 #print dataframe resultante
################################################################################
#2 forma
M<-c()    #vetor mes vazio
Temp<-c() #vetor Temperatura vazio
#Loop de busca
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){                  #compara array mes com o array de busca
M[length(M)+1]=df$mes[i]                #calcula pos e insere no array mes
Temp[length(Temp)+1]=df$Temperatura[i]  #calcula pos e insere no array temperatura
}
}
}
dfr<-data.frame(Mes=M,Temperatura=Temp);dfr #renomear colunas e printar dataframe resultante
View(arq)
#1 forma
#dados e busca
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df  #merge dataframe
x<-df[df$mes=="Maio",]              #busca
y<-df[df$mes=="Janeiro", ]          #busca
z<-df[df$mes=="Novembro", ]         #busca
dfr<-rbind(x,y,z)                   #merge dados encontrados
dfr                                 #print dataframe resultante
################################################################################
#2 forma
M<-c()    #vetor mes vazio
Temp<-c() #vetor Temperatura vazio
#Loop de busca
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){                  #compara array mes com o array de busca
M[length(M)+1]=df$mes[i]                #calcula pos e insere no array mes
Temp[length(Temp)+1]=df$Temperatura[i]  #calcula pos e insere no array temperatura
}
}
}
dfr<-data.frame(Mes=M,Temperatura=Temp);dfr #renomear colunas e printar dataframe resultante
#1 forma
#dados e busca
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df  #merge dataframe
x<-df[df$mes=="Maio",]              #busca
y<-df[df$mes=="Janeiro", ]          #busca
z<-df[df$mes=="Novembro", ]         #busca
dfr<-rbind(x,y,z)                   #merge dados encontrados
dfr                                 #print dataframe resultante
################################################################################
#2 forma
M<-c()    #vetor mes vazio
Temp<-c() #vetor Temperatura vazio
#Loop de busca
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){                  #compara array mes com o array de busca
M[length(M)+1]=df$mes[i]                #calcula pos e insere no array mes
Temp[length(Temp)+1]=df$Temperatura[i]  #calcula pos e insere no array temperatura
}
}
}
dfr<-data.frame(Mes=M,Temperatura=Temp);dfr #renomear colunas e printar dataframe resultante
#1 forma
#dados e busca
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df  #merge dataframe
x<-df[df$mes=="Maio",]              #busca
x<-df[df$mes=="Maio",]              #busca
x<-df[df$mes=="Maio",]              #busca
#1 forma
#dados e busca
mes <- c("Janeiro", "Fevereiro", "Marco", "Abril","Maio","Junho","julho", "Agosto", "Setembro", "Outubro", "Novembro","Dezembro")
Temperatura <- c(33, 32 , 27, 26.50, 27, 19.50, 18,19,22,27,26.50,30)
busca<-c("Maio","Janeiro","Novembro")
df<-data.frame(mes,Temperatura);df  #merge dataframe
x<-df[df$mes=="Maio",]              #busca
y<-df[df$mes=="Janeiro", ]          #busca
z<-df[df$mes=="Novembro", ]         #busca
dfr<-rbind(x,y,z)                   #merge dados encontrados
dfr                                 #print dataframe resultante
################################################################################
#2 forma
M<-c()    #vetor mes vazio
Temp<-c() #vetor Temperatura vazio
#Loop de busca
for(i in 1:length(mes)){
for(j in 1:length(busca)){
if(df$mes[i]==busca[j]){                  #compara array mes com o array de busca
M[length(M)+1]=df$mes[i]                #calcula pos e insere no array mes
Temp[length(Temp)+1]=df$Temperatura[i]  #calcula pos e insere no array temperatura
}
}
}
dfr<-data.frame(Mes=M,Temperatura=Temp);dfr #renomear colunas e printar dataframe resultante
rm(list=ls(all=TRUE))
setwd("C:/Users/vinic/Documents/GitHub/viniciosb.github.io/ALL/ModelagemEBiometriaFlorestal")
require('wakefield')
limpa<-function(){
cat("\014")
}
entrada<-function(n){
# inpt<-c()
# for(i in 1: n){
#   x=sample(0:1,1,replace = TRUE)
#
#   if(x==0){
#     inpt[length(inpt)+1]=F
#   }
#   else{
#     inpt[length(inpt)+1]=T
#   }
#
# }
# return(inpt)
return(r_sample_logical(n, prob = NULL, name = "Logical"))
}
saida<-function(input){
output<-c() #vetor output nulo
#df<-data.frame(input, output)
flag=1 #flag de iteracao de ocorrencias de troca
for(i in 1:length(input)){
if(input[i]=="FALSE"){
output[i]=NA ## se input na pos I  for igual a FALSE o vetor NA recebe NA
}
if(input[i]=="TRUE"){
output[i]=flag #se o vetor na pos for igual a TRUE o vetor output recebe flag
if(i!=length(input) && input[i+1]=="FALSE"){
flag=flag+1 # se a proxima pos for igual a False flag e incrementada
}
}
}
return(output)
}
men<-c("Input aleatorio","Input por vetor no Fonte","Input por arquivo CSV",'Input via Prompt')
input <- c(F,F,F,T,F,F,F,T,T,T,F,F,F,F,T,T,F,F,F,F,F,T,T,F)                        #entrada do input
#output <- c(NA,NA,NA,1,NA,NA,NA,2,2,2,NA,NA,NA,NA,3,3,NA,NA,NA,NA,NA,4,4,NA)       #entrada do output
limpa()
estado<-menu(men, graphics = TRUE, title = NULL)
T
limpa()
if(estado==1){
limpa()
cat('informe o numero de valores aleatorios: ')
texto <- readLines(n = 1)
val=strtoi(texto)
input<-entrada(val)
system.time(output<-saida(input))
df<-data.frame(input,output)
limpa()
df
}else if(estado==2){
if(length(input)!=0){
output<-saida(input)
df<-data.frame(input,output)
limpa()
df
}else{
limpa()
cat("VETOR VAZIO")
}
}else if(estado==3){
input<-c(read.csv("inp.csv",header = T)$x)
if(length(input)!=0){
output<-saida(input)
df<-data.frame(input,output)
limpa()
df
}else{
limpa()
cat("VETOR VAZIO")
}
}else{
input<-scan()
output<-saida(input)
}
x<-scan()
x<-scan()
x<-scan()
texto <- readLines(n = 10)
output<-saida(texto)
df<-data.frame(input,output)
output<-saida(texto)
rm(list=ls(all=TRUE))
setwd("C:/Users/vinic/Documents/GitHub/viniciosb.github.io/ALL/ModelagemEBiometriaFlorestal")
require('wakefield')
source("~/GitHub/viniciosb.github.io/ALL/ModelagemEBiometriaFlorestal/ex2.R", echo=TRUE)
typeof(input)
if(length(input)!=0 && typeof(input)=="logical"){
output<-saida(input)
df<-data.frame(input,output)
limpa()
df
}else{
limpa()
cat("VETOR VAZIO")
}
val=type.convert(texto)
val=type.convert(texto,integer)
source("~/GitHub/viniciosb.github.io/ALL/ModelagemEBiometriaFlorestal/ex2.R", echo=TRUE)
